1.对于状态空间搜索类问题 一般bfs+hash判重(或排列康托展开判重) 或者IDA*都是能解决的,
只是对于状态空间复杂度 较大的情况,可能bfs很大程度上会MLE,这时推荐IDA*解决.
2.对于非状态空间搜索类的实际情景问题,bfs一般不好模拟状态,也不好判重,而IDA*
实际并不需要对其进行判重,因为迭代的深度能够进行高效进行剪枝,并且实现较为简洁,
顾可采用IDA*实现.
3.对于状态空间的实际排列,数字个数大于15 一般排列的数目非常大,判重需要的空间复杂度较大,
因此可改用IDA*,无需判重,虽然有重复状态出现,但是实际深度剪枝效率很高.
4.总之bfs 是按照队列把同一阶段可能的状态扩展全部入队,需要耗费空间,因此要对重复状态判重,
而IDDFS因为有深度限制,重复的状态本身会被深度限制所剪枝.
