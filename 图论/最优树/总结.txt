1.kruskal 会被卡,取决去输入数据边权的编号,不好的边权端点序列会使得每次连接
都重复进行O(N)的路径压缩,这样就会TLE,其实主要还是取决于是否有意要卡kruskal.
或者前面的边加入了,到中间的边都是重边这样,几乎是把所有的边都遍历了一遍才达到n-1条边,也能卡时间.

2.对于完全图建议用邻接矩阵,因为用链式前向星已经体现不出优势了,因为对于每个点都会和其余点相连,
而且链式前向星会占用更多的空间,有些完全图题目卡链式前向星的空间会MLE.

3.最短路问题如果不是问路径权值和最短,有时可以用生成树的思想去求解瓶颈最值问题.

4.
用n 表示图中顶点数目，用e表示图中边或弧的数目
稀疏图： e < nlogn
稠密图:  e >nlogn

5.prim算法的贪心只能应用在无向图上才能保证其正确性,有向图是无法保证其贪心正确性的,
因为入队时,因为单向边的局部性,不能考虑到其余未加入更小的单向边权.
kruskal 永远会将边集处理为无向边,如果原图为有向边,最终加入的边,个别边可能并不会可达的,
违背原有向图的真实连边的方向性.

6.采用邻接矩阵要看是否有重边,如果有重边那只记录最小边即可,否则会出错.

7.有很少条边或弧的图称为稀疏图，反之称为稠密图。
这里稀疏和稠密是模糊的概念，都是相对而言的。目前为止还没有给出一个量化的定义。
比方说一个有100个顶点、200条边的图，与100个顶点组成的完全图相比，他的边很少，也就是所谓的稀疏了。
用n 表示图中顶点数目，用e表示图中边或弧的数目
稀疏图： e < nlogn
稠密图:  e >nlogn