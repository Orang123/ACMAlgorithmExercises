HDU 2126 此题和POJ 3093都是求解尽可能多地装满背包的方案数,但是POJ 3093并没有指定具体
物品个数,做法依然只能按照恰好装满背包的做法 枚举出剩下物品中体积最小的也放不进去时就是
背包装不下的情况.而此题 有一个指定物品个数的要求,实际只要初始化物品个数为0对应的各个背包
容量dp[j][0]=1即可,这样只要从物品最大个数i逆序遍历 dp[m][i]是否是合法状态即可,就能找到最
多能放入物品的方案数. 虽然各个可能的背包容积在物品个数为0时初始值都是1,但并不会重复累加,
因为物品个数是第二个维度它能保证恰好装满物品个数,即物品个数为0,依次向物品个数为1、2、...、n
去转移,dp[1..n][j]本身是0(不合法),而上一个状态dp[i-1][j-val[i]]才是合法状态,而这样就能求出
尽可能装满容量为m,dp[i][m]下的方案数,这里m不一定是装满的,此题并没有要求恰好装满背包,只求方案数.